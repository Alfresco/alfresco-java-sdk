/*
 * Copyright 2021-2021 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.29).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.alfresco.activiti.handler;

import org.alfresco.activiti.model.DecisionAuditRepresentation;
import org.alfresco.activiti.model.ResultListDataRepresentationDecisionAuditRepresentation;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.cloud.openfeign.CollectionFormat;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@Api(value = "DecisionAudits", description = "the DecisionAudits API")
public interface DecisionAuditsApi {

    @ApiOperation(value = "Get an audit trail", nickname = "getAuditTrailUsingGET", notes = "", response = DecisionAuditRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "decision-audits", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = DecisionAuditRepresentation.class) })
    @RequestMapping(value = "/activiti-app/api/enterprise/decisions/audits/{auditTrailId}",
        produces = "application/json", 
        method = RequestMethod.GET)
    @CollectionFormat(feign.CollectionFormat.CSV)
    ResponseEntity<DecisionAuditRepresentation> getAuditTrailUsingGET(@ApiParam(value = "auditTrailId", required=true) @PathVariable("auditTrailId") Long auditTrailId);


    @ApiOperation(value = "Query decision table audit trails", nickname = "getAuditTrailsUsingGET", notes = "", response = ResultListDataRepresentationDecisionAuditRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "decision-audits", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ResultListDataRepresentationDecisionAuditRepresentation.class) })
    @RequestMapping(value = "/activiti-app/api/enterprise/decisions/audits",
        produces = "application/json", 
        method = RequestMethod.GET)
    @CollectionFormat(feign.CollectionFormat.CSV)
    ResponseEntity<ResultListDataRepresentationDecisionAuditRepresentation> getAuditTrailsUsingGET(@NotNull @ApiParam(value = "decisionKey", required = true) @Valid @RequestParam(value = "decisionKey", required = true) String decisionKey, @NotNull @ApiParam(value = "dmnDeploymentId", required = true) @Valid @RequestParam(value = "dmnDeploymentId", required = true) Long dmnDeploymentId);

}
