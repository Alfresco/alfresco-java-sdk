/*
 * Copyright 2021-2021 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.29).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.alfresco.activiti.handler;

import com.alfresco.activiti.model.FormDefinitionRepresentation;
import com.alfresco.activiti.model.FormValueRepresentation;
import com.alfresco.activiti.model.IdentityLinkRepresentation;
import com.alfresco.activiti.model.ResultListDataRepresentationProcessDefinitionRepresentation;
import com.alfresco.activiti.model.ResultListDataRepresentationRuntimeDecisionTableRepresentation;
import com.alfresco.activiti.model.ResultListDataRepresentationRuntimeFormRepresentation;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@Api(value = "ProcessDefinitions", description = "the ProcessDefinitions API")
public interface ProcessDefinitionsApi {

    @ApiOperation(value = "Add a user or group involvement to a process definition", nickname = "createIdentityLinkUsingPOST", notes = "", response = IdentityLinkRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created", response = IdentityLinkRepresentation.class) })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/identitylinks",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<IdentityLinkRepresentation> createIdentityLinkUsingPOST(@ApiParam(value = "processDefinitionId", required=true) @PathVariable("processDefinitionId") String processDefinitionId, @ApiParam(value = "" ) @Valid @RequestBody IdentityLinkRepresentation body);


    @ApiOperation(value = "Remove a user or group involvement from a process definition", nickname = "deleteIdentityLinkUsingDELETE", notes = "", authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content") })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/identitylinks/{family}/{identityId}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteIdentityLinkUsingDELETE(@ApiParam(value = "Process definition ID", required=true) @PathVariable("processDefinitionId") String processDefinitionId, @ApiParam(value = "Identity type", required=true) @PathVariable("family") String family, @ApiParam(value = "User or group ID", required=true) @PathVariable("identityId") String identityId);


    @ApiOperation(value = "Get a user or group involvement with a process definition", nickname = "getIdentityLinkTypeUsingGET", notes = "", response = IdentityLinkRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = IdentityLinkRepresentation.class) })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/identitylinks/{family}/{identityId}",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<IdentityLinkRepresentation> getIdentityLinkTypeUsingGET(@ApiParam(value = "Process definition ID", required=true) @PathVariable("processDefinitionId") String processDefinitionId, @ApiParam(value = "Identity type", required=true) @PathVariable("family") String family, @ApiParam(value = "User or group ID", required=true) @PathVariable("identityId") String identityId);


    @ApiOperation(value = "List either the users or groups involved with a process definition", nickname = "getIdentityLinksForFamilyUsingGET", notes = "", response = IdentityLinkRepresentation.class, responseContainer = "List", authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = IdentityLinkRepresentation.class, responseContainer = "List") })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/identitylinks/{family}",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<List<IdentityLinkRepresentation>> getIdentityLinksForFamilyUsingGET(@ApiParam(value = "processDefinitionId", required=true) @PathVariable("processDefinitionId") String processDefinitionId, @ApiParam(value = "Identity type", required=true) @PathVariable("family") String family);


    @ApiOperation(value = "List the users and groups involved with a process definition", nickname = "getIdentityLinksUsingGET", notes = "", response = IdentityLinkRepresentation.class, responseContainer = "List", authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = IdentityLinkRepresentation.class, responseContainer = "List") })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/identitylinks",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<List<IdentityLinkRepresentation>> getIdentityLinksUsingGET(@ApiParam(value = "processDefinitionId", required=true) @PathVariable("processDefinitionId") String processDefinitionId);


    @ApiOperation(value = "List the decision tables associated with a process definition", nickname = "getProcessDefinitionDecisionTablesUsingGET", notes = "", response = ResultListDataRepresentationRuntimeDecisionTableRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ResultListDataRepresentationRuntimeDecisionTableRepresentation.class) })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/decision-tables",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<ResultListDataRepresentationRuntimeDecisionTableRepresentation> getProcessDefinitionDecisionTablesUsingGET(@ApiParam(value = "processDefinitionId", required=true) @PathVariable("processDefinitionId") String processDefinitionId);


    @ApiOperation(value = "List the forms associated with a process definition", nickname = "getProcessDefinitionFormsUsingGET", notes = "", response = ResultListDataRepresentationRuntimeFormRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ResultListDataRepresentationRuntimeFormRepresentation.class) })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/forms",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<ResultListDataRepresentationRuntimeFormRepresentation> getProcessDefinitionFormsUsingGET(@ApiParam(value = "processDefinitionId", required=true) @PathVariable("processDefinitionId") String processDefinitionId);


    @ApiOperation(value = "Retrieve the start form for a process definition", nickname = "getProcessDefinitionStartFormUsingGET", notes = "", response = FormDefinitionRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = FormDefinitionRepresentation.class) })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/start-form",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<FormDefinitionRepresentation> getProcessDefinitionStartFormUsingGET();


    @ApiOperation(value = "Retrieve a list of process definitions", nickname = "getProcessDefinitionsUsingGET", notes = "Get a list of process definitions (visible within the tenant of the user)", response = ResultListDataRepresentationProcessDefinitionRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ResultListDataRepresentationProcessDefinitionRepresentation.class) })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<ResultListDataRepresentationProcessDefinitionRepresentation> getProcessDefinitionsUsingGET(@ApiParam(value = "latest") @Valid @RequestParam(value = "latest", required = false) Boolean latest, @ApiParam(value = "appDefinitionId") @Valid @RequestParam(value = "appDefinitionId", required = false) Long appDefinitionId, @ApiParam(value = "deploymentId") @Valid @RequestParam(value = "deploymentId", required = false) String deploymentId);


    @ApiOperation(value = "Retrieve field values (eg. the typeahead field)", nickname = "getRestFieldValuesUsingGET", notes = "", response = FormValueRepresentation.class, responseContainer = "List", authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = FormValueRepresentation.class, responseContainer = "List") })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/start-form-values/{field}",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<List<FormValueRepresentation>> getRestFieldValuesUsingGET();


    @ApiOperation(value = "Retrieve field values (eg. the table field)", nickname = "getRestTableFieldValuesUsingGET", notes = "", response = FormValueRepresentation.class, responseContainer = "List", authorizations = {
        @Authorization(value = "basicAuth")    }, tags={ "process-definitions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = FormValueRepresentation.class, responseContainer = "List") })
    @RequestMapping(value = "/activiti-app/api/enterprise/process-definitions/{processDefinitionId}/start-form-values/{field}/{column}",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<List<FormValueRepresentation>> getRestTableFieldValuesUsingGET();

}
