/*
 * Copyright 2021-2021 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.alfresco.governance.classification.handler;

import org.alfresco.governance.classification.model.DeclassificationDateRecalculationProcessBody;
import org.alfresco.governance.classification.model.DeclassificationDateRecalculationProcessEntry;
import org.alfresco.governance.classification.model.DeclassificationDateRecalculationProcessPaging;
import org.alfresco.governance.classification.model.Error;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.cloud.openfeign.CollectionFormat;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "DefaultClassificationValues")
public interface DefaultClassificationValuesApi {

    @ApiOperation(value = "Calculate the default declassification date", nickname = "calculateDefaultDeclassificationDate", notes = "Calculates the default declassification date for **nodeId** based on the properties of the node and the current declassification time frame.", response = String.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "default-classification-values", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful response", response = String.class),
        @ApiResponse(code = 401, message = "Authentication failed"),
        @ApiResponse(code = 403, message = "Current user does not have permission to retrieve default values for **nodeId**"),
        @ApiResponse(code = 404, message = "**nodeId** does not exist"),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(value = "/default-classification-values/{nodeId}/calculate-declassification-date",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.POST)
    @CollectionFormat(feign.CollectionFormat.CSV)
    ResponseEntity<String> calculateDefaultDeclassificationDate(@ApiParam(value = "The identifier of a node.",required=true) @PathVariable("nodeId") String nodeId);


    @ApiOperation(value = "Get declassification date recalculation information", nickname = "declassificationDateRecalculationProcessesGet", notes = "Find the status of the declassification date recalculation process(es).", response = DeclassificationDateRecalculationProcessPaging.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "default-classification-values", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response", response = DeclassificationDateRecalculationProcessPaging.class),
        @ApiResponse(code = 401, message = "Authentication failed"),
        @ApiResponse(code = 403, message = "Current user does not have permission to retrieve information about declassification date recalculation processes."),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(value = "/declassification-date-recalculation-processes",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    @CollectionFormat(feign.CollectionFormat.CSV)
    ResponseEntity<DeclassificationDateRecalculationProcessPaging> declassificationDateRecalculationProcessesGet();


    @ApiOperation(value = "Start the declassification date recalculation process", nickname = "declassificationDateRecalculationProcessesPost", notes = "Start the declassification date recalculation process with id **processId** if it is not already running.  The only supported id is \"-declassificationDateRecalculationProcess-\". ", response = DeclassificationDateRecalculationProcessEntry.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "default-classification-values", })
    @ApiResponses(value = { 
        @ApiResponse(code = 202, message = "Successful response - the process has been started", response = DeclassificationDateRecalculationProcessEntry.class),
        @ApiResponse(code = 401, message = "Authentication failed"),
        @ApiResponse(code = 403, message = "Current user does not have permission to start the declassification date recalculation process."),
        @ApiResponse(code = 404, message = "**processId** does not exist"),
        @ApiResponse(code = 422, message = "The process is currently running"),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(value = "/declassification-date-recalculation-processes",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    @CollectionFormat(feign.CollectionFormat.CSV)
    ResponseEntity<DeclassificationDateRecalculationProcessEntry> declassificationDateRecalculationProcessesPost(@ApiParam(value = "The entity containing the identifier for the declassification date recalculation process. The id should be set to \"-declassificationDateRecalculationProcess-\"." ,required=true )  @Valid @RequestBody DeclassificationDateRecalculationProcessBody declassificationDateRecalculationProcess);


    @ApiOperation(value = "Get declassification date recalculation process information", nickname = "declassificationDateRecalculationProcessesProcessIdGet", notes = "Gets the declassification date recalculation process with id **processId**.  The only supported id is \"-declassificationDateRecalculationProcess-\".", response = DeclassificationDateRecalculationProcessEntry.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "default-classification-values", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response", response = DeclassificationDateRecalculationProcessEntry.class),
        @ApiResponse(code = 401, message = "Authentication failed"),
        @ApiResponse(code = 403, message = "Current user does not have permission to retrieve information about the declassification date recalculation process."),
        @ApiResponse(code = 404, message = "**processId** does not exist"),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(value = "/declassification-date-recalculation-processes/{processId}",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    @CollectionFormat(feign.CollectionFormat.CSV)
    ResponseEntity<DeclassificationDateRecalculationProcessEntry> declassificationDateRecalculationProcessesProcessIdGet(@ApiParam(value = "The identifier for the declassification date recalculation process. This should be set to \"-declassificationDateRecalculationProcess-\".",required=true) @PathVariable("processId") String processId);

}
