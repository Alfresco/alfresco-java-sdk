/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.alfresco.activiti.handler;

import org.alfresco.activiti.model.ChecklistOrderRepresentation;
import org.alfresco.activiti.model.ResultListDataRepresentationTaskRepresentation;
import org.alfresco.activiti.model.TaskRepresentation;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "Checklists")
public interface ChecklistsApi {

    @ApiOperation(value = "Create a task checklist", nickname = "addSubtaskUsingPOST", notes = "", response = TaskRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "checklists", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = TaskRepresentation.class) })
    @RequestMapping(value = "/enterprise/tasks/{taskId}/checklist",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<TaskRepresentation
> addSubtaskUsingPOST(


@ApiParam(value = "taskId",required=true) @PathVariable("taskId") String
 taskId



,


@ApiParam(value = "taskRepresentation" ,required=true )  @Valid @RequestBody TaskRepresentation taskRepresentation

);


    @ApiOperation(value = "Get checklist for a task", nickname = "getChecklistUsingGET", notes = "", response = ResultListDataRepresentationTaskRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "checklists", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ResultListDataRepresentationTaskRepresentation.class) })
    @RequestMapping(value = "/enterprise/tasks/{taskId}/checklist",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<ResultListDataRepresentationTaskRepresentation
> getChecklistUsingGET(


@ApiParam(value = "taskId",required=true) @PathVariable("taskId") String
 taskId



);


    @ApiOperation(value = "Change the order of items on a checklist", nickname = "orderChecklistUsingPUT", notes = "", authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "checklists", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/enterprise/tasks/{taskId}/checklist",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.PUT)
    ResponseEntity<Void
> orderChecklistUsingPUT(


@ApiParam(value = "taskId",required=true) @PathVariable("taskId") String
 taskId



,


@ApiParam(value = "orderRepresentation" ,required=true )  @Valid @RequestBody ChecklistOrderRepresentation orderRepresentation

);

}
