/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.alfresco.activiti.handler;

import org.alfresco.activiti.model.ChangePasswordRepresentation;
import org.alfresco.activiti.model.ImageUploadRepresentation;
import org.springframework.core.io.Resource;
import org.alfresco.activiti.model.UserRepresentation;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "UserProfile")
public interface UserProfileApi {

    @ApiOperation(value = "Change user password", nickname = "changePasswordUsingPOST", notes = "", authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "user-profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/enterprise/profile-password",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<Void
> changePasswordUsingPOST(


@ApiParam(value = "changePasswordRepresentation" ,required=true )  @Valid @RequestBody ChangePasswordRepresentation changePasswordRepresentation

);


    @ApiOperation(value = "Retrieve user profile picture", nickname = "getProfilePictureUsingGET", notes = "Generally returns an image file", response = Resource.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "user-profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Resource.class) })
    @RequestMapping(value = "/enterprise/profile-picture",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<Resource
> getProfilePictureUsingGET();


    @ApiOperation(value = "Get user profile", nickname = "getProfileUsingGET", notes = "This operation returns account information for the current user. This is useful to get the name, email, the groups that the user is part of, the user picture, etc.", response = UserRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "user-profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = UserRepresentation.class) })
    @RequestMapping(value = "/enterprise/profile",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<UserRepresentation
> getProfileUsingGET();


    @ApiOperation(value = "Update user profile", nickname = "updateProfile", notes = "Only a first name, last name, email and company can be updated", response = UserRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "user-profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = UserRepresentation.class) })
    @RequestMapping(value = "/enterprise/profile",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<UserRepresentation
> updateProfile(


@ApiParam(value = "userRepresentation" ,required=true )  @Valid @RequestBody UserRepresentation userRepresentation

);


    @ApiOperation(value = "Change user profile picture", nickname = "uploadProfilePictureUsingPOST", notes = "", response = ImageUploadRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "user-profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ImageUploadRepresentation.class) })
    @RequestMapping(value = "/enterprise/profile-picture",
        produces = "application/json", 
        consumes = "multipart/form-data",
        method = RequestMethod.POST)
    ResponseEntity<ImageUploadRepresentation
> uploadProfilePictureUsingPOST(



@ApiParam(value = "file detail") @RequestParam("file") MultipartFile file
);

}
