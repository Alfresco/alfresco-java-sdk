/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.alfresco.activiti.handler;

import org.alfresco.activiti.model.CommentRepresentation;
import org.alfresco.activiti.model.ResultListDataRepresentationCommentRepresentation;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "Comments")
public interface CommentsApi {

    @ApiOperation(value = "Add a comment to a process instance", nickname = "addProcessInstanceCommentUsingPOST", notes = "", response = CommentRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "comments", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = CommentRepresentation.class) })
    @RequestMapping(value = "/enterprise/process-instances/{processInstanceId}/comments",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommentRepresentation
> addProcessInstanceCommentUsingPOST(


@ApiParam(value = "commentRequest" ,required=true )  @Valid @RequestBody CommentRepresentation commentRequest

,


@ApiParam(value = "processInstanceId",required=true) @PathVariable("processInstanceId") String
 processInstanceId



);


    @ApiOperation(value = "Add a comment to a task", nickname = "addTaskCommentUsingPOST", notes = "", response = CommentRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "comments", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = CommentRepresentation.class) })
    @RequestMapping(value = "/enterprise/tasks/{taskId}/comments",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<CommentRepresentation
> addTaskCommentUsingPOST(


@ApiParam(value = "commentRequest" ,required=true )  @Valid @RequestBody CommentRepresentation commentRequest

,


@ApiParam(value = "taskId",required=true) @PathVariable("taskId") String
 taskId



);


    @ApiOperation(value = "Get comments for a process", nickname = "getProcessInstanceCommentsUsingGET", notes = "", response = ResultListDataRepresentationCommentRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "comments", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ResultListDataRepresentationCommentRepresentation.class) })
    @RequestMapping(value = "/enterprise/process-instances/{processInstanceId}/comments",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<ResultListDataRepresentationCommentRepresentation
> getProcessInstanceCommentsUsingGET(


@ApiParam(value = "processInstanceId",required=true) @PathVariable("processInstanceId") String
 processInstanceId



,

@ApiParam(value = "latestFirst") @Valid @RequestParam(value = "latestFirst", required = false) Boolean
 latestFirst




);


    @ApiOperation(value = "Get comments for a task", nickname = "getTaskCommentsUsingGET", notes = "", response = ResultListDataRepresentationCommentRepresentation.class, authorizations = {
        @Authorization(value = "basicAuth")
    }, tags={ "comments", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ResultListDataRepresentationCommentRepresentation.class) })
    @RequestMapping(value = "/enterprise/tasks/{taskId}/comments",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<ResultListDataRepresentationCommentRepresentation
> getTaskCommentsUsingGET(


@ApiParam(value = "taskId",required=true) @PathVariable("taskId") String
 taskId



,

@ApiParam(value = "latestFirst") @Valid @RequestParam(value = "latestFirst", required = false) Boolean
 latestFirst




);

}
